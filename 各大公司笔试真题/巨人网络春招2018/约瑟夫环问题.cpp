// 约瑟夫环
// 约瑟夫是公元一世纪著名的历史学家。在罗马人占领乔塔帕特后，39 个犹太人与约瑟夫及他的朋友躲到一个洞中，
// 39个犹太人决定宁愿死也不要被敌人俘虏，于是决定了一个流传千古的自杀方式，41个人排成一个圆圈，
// 由第1个人开始报数，每报到第3人该人就必须自杀，然后再由下一个人重新报数，直到所有人都自杀身亡为止。
// 然而约瑟夫和他的朋友并不想遵从这个约定，约瑟夫要他的朋友先假装遵从，他将朋友与自己安排在第16个和第31个位置，
// 于是逃过了这场死亡游戏。 
// 现在我们把问题一般化，假设有n（n≥3且n≤100）个人，按1，2，．．．n编号围坐一圈，
// 从一号开始按1，2．．．，m报数，凡报m号的退出到圈外，如此循环报数直到圈内剩下2个人。
// 请问，这两个人的编号是多少？

#include <iostream>
using namespace std;
//该函数返回第n次扔海里的人的编号，编号从0开始计算
int ysfdg(int sum,int value,int n)
{
    if(n==1)
        return (sum+value-1)%sum;
    else
        return(ysfdg(sum-1,value,n-1)+value)%sum;//之前sum-1个人时，第n-1次杀死的人
}
int main()
{
    //sum是总人数 ,n是杀人的个数，M是每次旋转相邻的个数，也就是说数要数M+1个
    int n=1,sum=10,M=2;
    while(n!=sum)
    {
        int a=ysfdg(sum,M+1,n);
        cout<<"第"<<n<<"次杀死第"<<a+1<<"个人"<<endl;
        n++;
    }
    cout<<"最后剩下的人是第"<<ysfdg(sum,M+1,n)+1<<"个人"<<endl;
    return 0;
}